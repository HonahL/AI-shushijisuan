                // 显示初始内容
                explanationContent.innerHTML = `
                    <p id="loadingMessage"><strong>思考错因中……</strong></p>
                    <div id="streamingContent"></div>
                `;
                
                const streamingContent = document.getElementById('streamingContent');
                let fullAnalysis = '';
                
                // 创建EventSource连接
                console.log('发送到后端的数据:', { prompt, problemData });
                const response = await fetch('/api/analyze', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ prompt, problemData })
                }); 

                // 处理流式响应
                if (response.body) {
                    // 创建一个文本解码器
                    const decoder = new TextDecoder();
                    let buffer = '';
                    
                    // 创建一个响应读取器
                    const reader = response.body.getReader();
                    
                    // 处理流式响应
                    const processStream = async () => {
                        try {
                            console.log('开始处理流式响应');
                            let isThinking = true;  // 标记当前是否在思维链阶段
                            let thinkingContent = '';
                            let finalContent = '';
                            
                            while (true) {
                                const { done, value } = await reader.read();
                                console.log('读取数据:', done ? '完成' : `${value.length} 字节`);
                                if (done) break;
                                
                                // 解码接收到的数据
                                const chunk = decoder.decode(value, { stream: true });
                                console.log('解码数据:', chunk);
                                buffer += chunk;
                                
                                // 处理完整的行
                                const lines = buffer.split('\n');
                                buffer = lines.pop() || ''; // 保留最后一个不完整的行
                                
                                for (const line of lines) {
                                    if (line.trim() === '') continue;
                                    console.log('处理行:', line);
                                    
                                    if (line.startsWith('data: ')) {
                                        const data = line.substring(6);
                                        console.log('提取数据:', data);
                                        if (data === '[DONE]') {
                                            // 流结束
                                            console.log('流结束');
                                            return;
                                        } else {
                                            try {
                                                const parsedData = JSON.parse(data);
                                                console.log('解析的数据:', parsedData);
                                                if (parsedData.type === 'thinking') {
                                                    console.log('收到思考内容');
                                                    // 显示思维链内容
                                                    if (!document.getElementById('thinkingContent')) {
                                                        const thinkingDiv = document.createElement('div');
                                                        thinkingDiv.id = 'thinkingContent';
                                                        thinkingDiv.innerHTML = '<p><strong>展开思考：</strong></p><div id="thinkingText" class="thinking-box"></div>';
                                                        explanationContent.insertBefore(thinkingDiv, streamingContent.parentNode);
                                                        
                                                        // 添加思维链样式
                                                        const style = document.createElement('style');
                                                        style.textContent = `
                                                            .thinking-box {
                                                                background-color: #f5f5f5;
                                                                border-left: 4px solid #ddd;
                                                                color: #666;
                                                                font-size: 0.9em;
                                                                padding: 10px;
                                                                margin: 10px 0;
                                                                max-height: 200px;
                                                                overflow-y: auto;
                                                                white-space: pre-wrap;
                                                            }
                                                        `;
                                                        document.head.appendChild(style);
                                                    }
                                                    const thinkingText = document.getElementById('thinkingText');
                                                    thinkingContent += parsedData.content;
                                                    console.log('更新思考内容:', thinkingContent);
                                                    thinkingText.textContent = thinkingContent;
                                                    isThinking = true;
                                                } else if (parsedData.type === 'content') {
                                                    console.log('收到最终内容');
                                                    // 如果之前在思考阶段，现在切换到最终答案阶段
                                                    if (isThinking) {
                                                        isThinking = false;
                                                        // 清空流式内容区域，准备显示最终答案
                                                        streamingContent.textContent = '';
                                                        // 隐藏加载消息
                                                        const loadingMessage = document.getElementById('loadingMessage');
                                                        if (loadingMessage) {
                                                            loadingMessage.style.display = 'none';
                                                        }
                                                    }
                                                    
                                                    // 显示最终答案
                                                    if (!document.getElementById('finalAnswer')) {
                                                        const answerDiv = document.createElement('div');
                                                        answerDiv.id = 'finalAnswer';
                                                        answerDiv.innerHTML = '<p><strong>错因分析</strong></p>';
                                                        explanationContent.insertBefore(answerDiv, streamingContent.parentNode);
                                                    }
                                                    finalContent += parsedData.content;
                                                    console.log('更新最终内容:', finalContent);
                                                    streamingContent.textContent = finalContent;
                                                } else if (parsedData.choices && parsedData.choices[0].delta.content) {
                                                    console.log('收到 DeepSeek 格式内容');
                                                    // 处理 DeepSeek API 的格式
                                                    const content = parsedData.choices[0].delta.content;
                                                    fullAnalysis += content;
                                                    console.log('更新分析内容:', fullAnalysis);
                                                    streamingContent.textContent = fullAnalysis;
                                                }
                                            } catch (e) {
                                                console.error('解析数据失败:', e, '原始数据:', data);
                                                console.error('解析数据失败:', e);
                                            }
                                        }
                                    }
                                }
                            }
                        } catch (error) {
                            console.error('流处理错误:', error);
                            explanationContent.innerHTML += `<p><strong>错误：</strong>${error.message}</p>`;
                        }
                    };
                    
                    // 开始处理流
                    processStream();
                } else {
                    console.error('浏览器不支持流式响应');
                    explanationContent.innerHTML += `<p><strong>错误：</strong>浏览器不支持流式响应</p>`;
                } 